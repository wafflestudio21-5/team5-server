name: CI/CD using github actions & docker including ktlint

# event trigger
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
      # Test
      - name: Checkout
        uses: actions/checkout@v4

      # https://github.com/actions/setup-java?tab=readme-ov-file#eclipse-temurin
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: set credentials
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application-prod.yaml
        env:
          spring.datasource.url: jdbc:mysql://${{ secrets.AWS_RDS_ENDPOINT }}:3306/${{ secrets.PROJECT_NAME }}?serverTimezone=Asia/Seoul&characterEncoding=UTF-8&createDatabaseIfNotExist=true
          spring.datasource.username: ${{ secrets.AWS_RDS_USERNAME }}
          spring.datasource.password: ${{ secrets.AWS_RDS_PASSWORD }}
          cloud.aws.credentials.accessKey: ${{ secrets.AWS_S3_ACCESS_KEY }}
          cloud.aws.credentials.secretKey: ${{ secrets.AWS_S3_SECRET_KEY }}
          spring.security.oauth2.client.registration.facebook.client-id: ${{ secrets.OAUTH2_FACEBOOK_CLIENT_ID }}
          spring.security.oauth2.client.registration.facebook.client-secret: ${{ secrets.OAUTH2_FACEBOOK_CLIENT_SECRET }}
          jwt.accessTokenSecretKey: ${{ secrets.JWT_ACCESS_TOKEN_SECRET_KEY }}
          jwt.refreshTokenSecretKey: ${{ secrets.JWT_REFRESH_TOKEN_SECRET_KEY }}

      - name: set credentials (dev-secure)
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application-dev-secure.yaml
        env:
          cloud.aws.credentials.accessKey: ${{ secrets.AWS_S3_ACCESS_KEY }}
          cloud.aws.credentials.secretKey: ${{ secrets.AWS_S3_SECRET_KEY }}
          spring.security.oauth2.client.registration.facebook.client-id: ${{ secrets.OAUTH2_FACEBOOK_CLIENT_ID }}
          spring.security.oauth2.client.registration.facebook.client-secret: ${{ secrets.OAUTH2_FACEBOOK_CLIENT_SECRET }}
          jwt.accessTokenSecretKey: ${{ secrets.JWT_ACCESS_TOKEN_SECRET_KEY }}
          jwt.refreshTokenSecretKey: ${{ secrets.JWT_REFRESH_TOKEN_SECRET_KEY }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Test with Gradle
        run: ./gradlew test

      - name: Check ktlint
        run: ./gradlew ktlintCheck

      - name: Build with Gradle
        if: github.event_name == 'push'
        run: ./gradlew build -x test

      # docker build & push
      - name: Docker build & push
        if: github.event_name == 'push'
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.PROJECT_NAME }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.PROJECT_NAME }}

      # deploy to EC2
      # production environment testing
      - name: Deploy
        if: github.event_name == 'push'
        uses: appleboy/ssh-action@v1.0.2
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.PRIVATE_KEY }}
          script_stop: true
          script: |
            sudo docker stop $(sudo docker ps -a -q)
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.PROJECT_NAME }}
            sudo docker run -d -e SPRING_PROFILE=${{ vars.PROFILE }} -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/${{ secrets.PROJECT_NAME }}
            sudo docker image prune -f

